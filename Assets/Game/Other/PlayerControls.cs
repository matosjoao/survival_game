//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Game/Other/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""Main"",
            ""id"": ""95aff750-3f0e-42c5-b364-52db6e3da4d8"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""cd1fbbee-5c13-4775-a6d3-605c22d670b0"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""1087e628-2d4f-4285-9670-7aeb55c7e304"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Inventory"",
                    ""type"": ""Button"",
                    ""id"": ""f4e4ed50-197c-47c0-86dc-9208647f875c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""9b223957-c1ef-46ca-b79b-bb805603f17c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""d131037d-1dce-4b2d-90c5-8e1bef7076cd"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""dbab275e-d02b-4fdc-b2c0-94f039d554fa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MousePosition"",
                    ""type"": ""Value"",
                    ""id"": ""c5a04a12-ca8b-4ac8-b155-9fa26175728f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""QuickSlotOne"",
                    ""type"": ""Button"",
                    ""id"": ""0d01438f-1c04-48fa-9a56-4358d8e3020d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""QuickSlotTwo"",
                    ""type"": ""Button"",
                    ""id"": ""2fb3d6c2-3eee-4e7d-b7d7-ded23c817946"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""QuickSlotThree"",
                    ""type"": ""Button"",
                    ""id"": ""44501d62-837d-478c-a249-81370c0ba6b1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""QuickSlotFour"",
                    ""type"": ""Button"",
                    ""id"": ""1f8a5304-e977-4bb7-be82-b272128a6fc3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""QuickSlotFive"",
                    ""type"": ""Button"",
                    ""id"": ""f8d4807c-e31c-4d28-858c-53287f842e50"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""0031ed07-7321-4e4b-87f7-35d2bca366d9"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""053fa873-d500-4a86-acce-1de1aee95c66"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""cf820eb1-cfb9-4f8e-9405-5c26ed1a93d6"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""3da013ce-cc06-4442-88e4-1f8635ff14f8"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""3035220d-5074-475d-98b3-8693197235e1"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""8a8946fd-4a90-4c96-bf20-c1e804270615"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""430bf61e-fea5-44c8-bc51-7cbc0a69ddc5"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Inventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""113decdd-fc3b-4904-8d41-782483cedc2f"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4e98260b-b110-43a3-9109-7f39b7a155d3"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c8a1963f-49c4-4864-8d73-1ca968e47b67"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1539b11e-6d2d-4a7f-9c4a-782ac49dc1f5"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""MousePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cb828312-3d67-492a-99d2-da09e09481d9"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""QuickSlotOne"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e9a8afba-69bb-412e-b601-d81798e8de76"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""QuickSlotTwo"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ac119d5a-55c1-47cf-9f5e-b967039052e8"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""QuickSlotThree"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""acc6deac-356b-4d7b-beec-ab91b238a46e"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""QuickSlotFour"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2f789a1b-d5db-4b5d-bdc6-f4e186cf4238"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""MouseKeyboard"",
                    ""action"": ""QuickSlotFive"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""MouseKeyboard"",
            ""bindingGroup"": ""MouseKeyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Main
        m_Main = asset.FindActionMap("Main", throwIfNotFound: true);
        m_Main_Move = m_Main.FindAction("Move", throwIfNotFound: true);
        m_Main_Jump = m_Main.FindAction("Jump", throwIfNotFound: true);
        m_Main_Inventory = m_Main.FindAction("Inventory", throwIfNotFound: true);
        m_Main_Interact = m_Main.FindAction("Interact", throwIfNotFound: true);
        m_Main_Look = m_Main.FindAction("Look", throwIfNotFound: true);
        m_Main_Attack = m_Main.FindAction("Attack", throwIfNotFound: true);
        m_Main_MousePosition = m_Main.FindAction("MousePosition", throwIfNotFound: true);
        m_Main_QuickSlotOne = m_Main.FindAction("QuickSlotOne", throwIfNotFound: true);
        m_Main_QuickSlotTwo = m_Main.FindAction("QuickSlotTwo", throwIfNotFound: true);
        m_Main_QuickSlotThree = m_Main.FindAction("QuickSlotThree", throwIfNotFound: true);
        m_Main_QuickSlotFour = m_Main.FindAction("QuickSlotFour", throwIfNotFound: true);
        m_Main_QuickSlotFive = m_Main.FindAction("QuickSlotFive", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Main
    private readonly InputActionMap m_Main;
    private IMainActions m_MainActionsCallbackInterface;
    private readonly InputAction m_Main_Move;
    private readonly InputAction m_Main_Jump;
    private readonly InputAction m_Main_Inventory;
    private readonly InputAction m_Main_Interact;
    private readonly InputAction m_Main_Look;
    private readonly InputAction m_Main_Attack;
    private readonly InputAction m_Main_MousePosition;
    private readonly InputAction m_Main_QuickSlotOne;
    private readonly InputAction m_Main_QuickSlotTwo;
    private readonly InputAction m_Main_QuickSlotThree;
    private readonly InputAction m_Main_QuickSlotFour;
    private readonly InputAction m_Main_QuickSlotFive;
    public struct MainActions
    {
        private @PlayerControls m_Wrapper;
        public MainActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Main_Move;
        public InputAction @Jump => m_Wrapper.m_Main_Jump;
        public InputAction @Inventory => m_Wrapper.m_Main_Inventory;
        public InputAction @Interact => m_Wrapper.m_Main_Interact;
        public InputAction @Look => m_Wrapper.m_Main_Look;
        public InputAction @Attack => m_Wrapper.m_Main_Attack;
        public InputAction @MousePosition => m_Wrapper.m_Main_MousePosition;
        public InputAction @QuickSlotOne => m_Wrapper.m_Main_QuickSlotOne;
        public InputAction @QuickSlotTwo => m_Wrapper.m_Main_QuickSlotTwo;
        public InputAction @QuickSlotThree => m_Wrapper.m_Main_QuickSlotThree;
        public InputAction @QuickSlotFour => m_Wrapper.m_Main_QuickSlotFour;
        public InputAction @QuickSlotFive => m_Wrapper.m_Main_QuickSlotFive;
        public InputActionMap Get() { return m_Wrapper.m_Main; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MainActions set) { return set.Get(); }
        public void SetCallbacks(IMainActions instance)
        {
            if (m_Wrapper.m_MainActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_MainActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnMove;
                @Jump.started -= m_Wrapper.m_MainActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnJump;
                @Inventory.started -= m_Wrapper.m_MainActionsCallbackInterface.OnInventory;
                @Inventory.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnInventory;
                @Inventory.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnInventory;
                @Interact.started -= m_Wrapper.m_MainActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnInteract;
                @Look.started -= m_Wrapper.m_MainActionsCallbackInterface.OnLook;
                @Look.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnLook;
                @Look.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnLook;
                @Attack.started -= m_Wrapper.m_MainActionsCallbackInterface.OnAttack;
                @Attack.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnAttack;
                @Attack.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnAttack;
                @MousePosition.started -= m_Wrapper.m_MainActionsCallbackInterface.OnMousePosition;
                @MousePosition.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnMousePosition;
                @MousePosition.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnMousePosition;
                @QuickSlotOne.started -= m_Wrapper.m_MainActionsCallbackInterface.OnQuickSlotOne;
                @QuickSlotOne.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnQuickSlotOne;
                @QuickSlotOne.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnQuickSlotOne;
                @QuickSlotTwo.started -= m_Wrapper.m_MainActionsCallbackInterface.OnQuickSlotTwo;
                @QuickSlotTwo.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnQuickSlotTwo;
                @QuickSlotTwo.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnQuickSlotTwo;
                @QuickSlotThree.started -= m_Wrapper.m_MainActionsCallbackInterface.OnQuickSlotThree;
                @QuickSlotThree.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnQuickSlotThree;
                @QuickSlotThree.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnQuickSlotThree;
                @QuickSlotFour.started -= m_Wrapper.m_MainActionsCallbackInterface.OnQuickSlotFour;
                @QuickSlotFour.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnQuickSlotFour;
                @QuickSlotFour.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnQuickSlotFour;
                @QuickSlotFive.started -= m_Wrapper.m_MainActionsCallbackInterface.OnQuickSlotFive;
                @QuickSlotFive.performed -= m_Wrapper.m_MainActionsCallbackInterface.OnQuickSlotFive;
                @QuickSlotFive.canceled -= m_Wrapper.m_MainActionsCallbackInterface.OnQuickSlotFive;
            }
            m_Wrapper.m_MainActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Inventory.started += instance.OnInventory;
                @Inventory.performed += instance.OnInventory;
                @Inventory.canceled += instance.OnInventory;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
                @Attack.started += instance.OnAttack;
                @Attack.performed += instance.OnAttack;
                @Attack.canceled += instance.OnAttack;
                @MousePosition.started += instance.OnMousePosition;
                @MousePosition.performed += instance.OnMousePosition;
                @MousePosition.canceled += instance.OnMousePosition;
                @QuickSlotOne.started += instance.OnQuickSlotOne;
                @QuickSlotOne.performed += instance.OnQuickSlotOne;
                @QuickSlotOne.canceled += instance.OnQuickSlotOne;
                @QuickSlotTwo.started += instance.OnQuickSlotTwo;
                @QuickSlotTwo.performed += instance.OnQuickSlotTwo;
                @QuickSlotTwo.canceled += instance.OnQuickSlotTwo;
                @QuickSlotThree.started += instance.OnQuickSlotThree;
                @QuickSlotThree.performed += instance.OnQuickSlotThree;
                @QuickSlotThree.canceled += instance.OnQuickSlotThree;
                @QuickSlotFour.started += instance.OnQuickSlotFour;
                @QuickSlotFour.performed += instance.OnQuickSlotFour;
                @QuickSlotFour.canceled += instance.OnQuickSlotFour;
                @QuickSlotFive.started += instance.OnQuickSlotFive;
                @QuickSlotFive.performed += instance.OnQuickSlotFive;
                @QuickSlotFive.canceled += instance.OnQuickSlotFive;
            }
        }
    }
    public MainActions @Main => new MainActions(this);
    private int m_MouseKeyboardSchemeIndex = -1;
    public InputControlScheme MouseKeyboardScheme
    {
        get
        {
            if (m_MouseKeyboardSchemeIndex == -1) m_MouseKeyboardSchemeIndex = asset.FindControlSchemeIndex("MouseKeyboard");
            return asset.controlSchemes[m_MouseKeyboardSchemeIndex];
        }
    }
    public interface IMainActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnInventory(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnAttack(InputAction.CallbackContext context);
        void OnMousePosition(InputAction.CallbackContext context);
        void OnQuickSlotOne(InputAction.CallbackContext context);
        void OnQuickSlotTwo(InputAction.CallbackContext context);
        void OnQuickSlotThree(InputAction.CallbackContext context);
        void OnQuickSlotFour(InputAction.CallbackContext context);
        void OnQuickSlotFive(InputAction.CallbackContext context);
    }
}
